_G.Config = { UserID = "3087df52-2f5c-4e6f-a407-10fa72d16932", discord_id = "1135837863603351573" , Note = "Pc", } loadstring(game:HttpGet("https://raw.githubusercontent.com/skadidau/unfazedfree/refs/heads/main/bgsi"))()

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

for _, service in pairs({"Chat"}) do
    pcall(function() 
        local s = game:GetService(service)
        if s then s:Destroy() end
    end)
end

Lighting.GlobalShadows = false
Lighting.FogEnd = 1000000
Lighting.Brightness = 2
pcall(function() Lighting.Outlines = false end)

for _, child in pairs(Lighting:GetChildren()) do
    if child:IsA("PostEffect") then
        child:Destroy()
    end
end

settings().Rendering.QualityLevel = 1
settings().Rendering.EnableFRM = false
settings().Rendering.MeshCacheSize = 0
settings().Rendering.EagerBulkExecution = true
settings().Physics.AllowSleep = true
settings().Physics.PhysicsEnvironmentalThrottle = 2
pcall(function() settings().Physics.DisableCSGv2 = true end)
settings().Network.PhysicsSend = 1
pcall(function() settings().Network.ExperimentalPhysicsEnabled = true end)
settings().Network.IncomingReplicationLag = -1

RunService:SetThrottleFramerateEnabled(false)
RunService.Heartbeat:Wait()

for _, obj in pairs(Workspace:GetDescendants()) do
    if obj:IsA("BasePart") and not obj:IsDescendantOf(Players.LocalPlayer.Character) then
        obj.Material = Enum.Material.Plastic
        obj.Reflectance = 0
        if obj:FindFirstChildOfClass("Texture") then
            obj:FindFirstChildOfClass("Texture"):Destroy()
        end
    elseif (obj:IsA("Decal") or obj:IsA("Texture")) and not obj:IsDescendantOf(Players.LocalPlayer.Character) then
        obj:Destroy()
    elseif (obj:IsA("ParticleEmitter") or obj:IsA("Fire") or obj:IsA("Smoke")) and not obj:IsDescendantOf(Players.LocalPlayer.Character) then
        obj:Destroy()
    elseif obj:IsA("Sound") and not obj:IsDescendantOf(Players.LocalPlayer.Character) then
        obj:Destroy()
    elseif obj:IsA("MeshPart") and not obj:IsDescendantOf(Players.LocalPlayer.Character) then
        obj.RenderFidelity = Enum.RenderFidelity.Performance
    end
end

workspace.CurrentCamera.CameraType = Enum.CameraType.Fixed
workspace.CurrentCamera:ClearAllChildren()

for _, connection in pairs(getconnections(game:GetService("ScriptContext").Error)) do
    connection:Disable()
end

for _, v in pairs({"Idled", "WindowFocusReleased"}) do
    for _, connection in pairs(getconnections(UserInputService[v])) do
        connection:Disable()
    end
end

collectgarbage("setpause", 100)
collectgarbage("setstepmul", 200)

task.wait(1)
for i = 1, 5 do
    RunService.Heartbeat:Wait()
    collectgarbage()
end

getgenv().running = not getgenv().running

local potions = {
    {"Speed", 6},
    {"Lucky", 6},
    {"Mythic", 6},
    {"Tickets", 6}, {"Tickets", 5},
    {"Infinity Elixir", 1},
    {"Secret Elixir", 1}
}

while getgenv().running do
    for _, potion in ipairs(potions) do
        local args = {"UsePotion", potion[1], potion[2]}
        game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.RemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
    end
end

local function hasMiningEggInUI()
    local gui = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
    if not gui then return false end
    
    local function searchForMiningText(obj)
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            if obj.Text and string.find(string.lower(obj.Text), "cyber") then
                return true
            end
        end
        
        for _, child in ipairs(obj:GetChildren()) do
            if searchForMiningText(child) then
                return true
            end
        end
        
        return false
    end
    
    for _, screenGui in ipairs(gui:GetChildren()) do
        if screenGui:IsA("ScreenGui") and searchForMiningText(screenGui) then
            return true
        end
    end
    
    return false
end

local args = {
    "SummonRift",
    {
        Type = "Egg",
        Time = 5,
        Name = "Cyber Egg",
        Luck = 5,
        World = "Minigame Paradise"
    }
}

local function executeSummon()
    if hasMiningEggInUI() then
        return
    end
    
    local success, err = pcall(function()
        game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteFunction"):InvokeServer(unpack(args))
    end)
    if not success then
    end
end

executeSummon()

while true do
    wait(1800)
    executeSummon()
end
