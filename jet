local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Malik Hub",
    LoadingTitle = "Malik Hub",
    LoadingSubtitle = "by Malik",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MalikHub",
        FileName = "Malik Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
})

local MainTab = Window:CreateTab("Main")
local JetpackTab = Window:CreateTab("Jetpacks", 4483362458)
local MasteryTab = Window:CreateTab("Mastery")
local UpgradesTab = Window:CreateTab("Upgrades")
local WorldsTab = Window:CreateTab("Worlds")
local HatchingTab = Window:CreateTab("Hatching")
local PotionTab = Window:CreateTab("Potions")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Paper"):WaitForChild("Remotes"):WaitForChild("__remotefunction")
local player = game.Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Flags
local Toggles = {
    EquipBest = false,
    AutoClaimChest = false,
    AutoAllMastery = false,
    AutoAllUpgrades = false,
    AutoDelete = false,
    AutoMerchant = false,
    AntiAFK = false,
}

-- Potions
local potions = {
    "Luck Potion I","Luck Potion II","Luck Potion III",
    "Coin Potion I","Coin Potion II","Coin Potion III",
    "Gem Potion I","Gem Potion II","Gem Potion III",
    "Nitro","Lucky Rainbow","Gold Pot"
}

for _, potion in pairs(potions) do
    PotionTab:CreateToggle({
        Name = "Use " .. potion,
        CurrentValue = false,
        Callback = function(Value)
            Toggles[potion] = Value
            if Value then
                task.spawn(function()
                    while Toggles[potion] do
                        Remotes:InvokeServer("Use Item", potion, 50)
                        task.wait(0.5)
                    end
                end)
            end
        end,
    })
end

-- Equip Best
MainTab:CreateToggle({
    Name = "Equip Best",
    CurrentValue = false,
    Callback = function(Value)
        Toggles.EquipBest = Value
        if Value then
            task.spawn(function()
                while Toggles.EquipBest do
                    Remotes:InvokeServer("Pet", {Action="EquipBest"})
                    task.wait(5)
                end
            end)
        end
    end,
})

-- Auto Claim Chest
MainTab:CreateToggle({
    Name = "Auto Claim Chest",
    CurrentValue = false,
    Callback = function(Value)
        Toggles.AutoClaimChest = Value
        if Value then
            task.spawn(function()
                while Toggles.AutoClaimChest do
                    Remotes:InvokeServer("Claim Chest", "DailyChest")
                    task.wait(60)
                end
            end)
        end
    end,
})

-- Auto Delete Pets
MainTab:CreateToggle({
    Name = "Auto Delete",
    CurrentValue = false,
    Callback = function(Value)
        Toggles.AutoDelete = Value
        if Value then
            task.spawn(function()
                while Toggles.AutoDelete do
                    local stats = ReplicatedStorage.Stats[player.Name]
                    local allPets = stats.Pets
                    local equipped = stats:FindFirstChild("EquippedPets")
                    local equippedIds = {}
                    if equipped then
                        for _, pet in pairs(equipped:GetChildren()) do
                            equippedIds[pet.Name] = true
                        end
                    end
                    local deleteList = {}
                    for _, pet in pairs(allPets:GetChildren()) do
                        if not equippedIds[pet.Name] then
                            table.insert(deleteList, pet.Name)
                        end
                    end
                    if #deleteList > 0 then
                        Remotes:InvokeServer("Pet", {Action="Delete", Pets=deleteList})
                    end
                    task.wait(5)
                end
            end)
        end
    end,
})

-- Auto Merchant
MainTab:CreateToggle({
    Name = "Auto Buy Merchant",
    CurrentValue = false,
    Callback = function(Value)
        Toggles.AutoMerchant = Value
        if Value then
            task.spawn(function()
                while Toggles.AutoMerchant do
                    for i = 1, 3 do
                        Remotes:InvokeServer("Buy Merchant", "Slot"..i)
                        task.wait(1)
                    end
                    task.wait(30)
                end
            end)
        end
    end,
})

-- Anti AFK
MainTab:CreateToggle({
    Name = "Anti AFK",
    CurrentValue = false,
    Callback = function(Value)
        Toggles.AntiAFK = Value
        if Value then
            for _, conn in pairs(getconnections(player.Idled)) do
                conn:Disable()
            end
        end
    end,
})
