local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local Remote = ReplicatedStorage:WaitForChild("Paper"):WaitForChild("Remotes"):WaitForChild("__remotefunction")
local GadgetsFolder = ReplicatedStorage:WaitForChild("Stats"):WaitForChild(Player.Name):WaitForChild("Gadgets")

local GadgetsTable = {}
pcall(function()
    GadgetsTable = require(ReplicatedStorage:WaitForChild("Tables"):WaitForChild("Gadgets"))
end)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
Rayfield:Notify({Title = "ScipterHub", Content = "Made by Malik"})

local Window = Rayfield:CreateWindow({
    Name = "ScipterHub",
    LoadingTitle = "ScipterHub",
    LoadingSubtitle = "",
    ConfigurationSaving = {Enabled = false}
})

local MainTab = Window:CreateTab("Main")
local GadgetsTab = Window:CreateTab("Gadgets")
local WorldTab = Window:CreateTab("World")

local keepList = {}
local deleteNames = {}
local deleteRarities = {}
local autoDelete = false
local antiAfk = false
local opRace = false

local gadgetNames = {}
for name,_ in pairs(GadgetsTable) do
    table.insert(gadgetNames, name)
end

local Character = Player.Character or Player.CharacterAdded:Wait()
local Root = Character:WaitForChild("HumanoidRootPart")

pcall(function()
    MainTab:CreateToggle({
        Name = "Anti AFK",
        CurrentValue = false,
        Callback = function(Value)
            antiAfk = Value
            if antiAfk then
                for _,v in pairs(getconnections(Player.Idled)) do
                    v:Disable()
                end
            else
                for _,v in pairs(getconnections(Player.Idled)) do
                    v:Enable()
                end
            end
        end
    })
end)

pcall(function()
    MainTab:CreateToggle({
        Name = "Opest Race Script",
        CurrentValue = false,
        Callback = function(Value)
            opRace = Value
        end
    })
end)

pcall(function()
    GadgetsTab:CreateSection("Keep Gadgets")
    GadgetsTab:CreateDropdown({
        Name = "Select Gadget to Keep",
        Options = gadgetNames,
        MultipleOptions = true,
        Callback = function(Options)
            keepList = Options
        end
    })
end)

pcall(function()
    GadgetsTab:CreateSection("Delete Gadgets By Name")
    GadgetsTab:CreateDropdown({
        Name = "Select Gadget to Delete",
        Options = gadgetNames,
        MultipleOptions = true,
        Callback = function(Options)
            deleteNames = Options
        end
    })
end)

pcall(function()
    GadgetsTab:CreateSection("Delete Gadgets By Rarity")
    GadgetsTab:CreateDropdown({
        Name = "Select Rarity to Delete",
        Options = {"Common","Uncommon","Rare","Epic","Legendary","Mythic"},
        MultipleOptions = true,
        Callback = function(Options)
            deleteRarities = Options
        end
    })
end)

pcall(function()
    GadgetsTab:CreateSection("Controls")
    GadgetsTab:CreateToggle({
        Name = "Auto Delete",
        CurrentValue = false,
        Callback = function(Value)
            autoDelete = Value
        end
    })
end)

local function deleteGadget(gadget)
    local gadgetName = gadget:GetAttribute("GadgetName")
    local gadgetID = gadget.Name
    if table.find(keepList, gadgetName) then return end
    local rarity = (GadgetsTable[gadgetName] and GadgetsTable[gadgetName].Rarity) or "Unknown"
    if table.find(deleteNames, gadgetName) or table.find(deleteRarities, rarity) then
        pcall(function()
            Remote:InvokeServer("Delete Gadgets", {gadgetID})
        end)
    end
end

spawn(function()
    while true do
        if autoDelete then
            for _, gadget in pairs(GadgetsFolder:GetChildren()) do
                deleteGadget(gadget)
            end
        end
        task.wait(1)
    end
end)

RunService.Heartbeat:Connect(function()
    if opRace then
        pcall(function()
            Remote:InvokeServer("Start Track")
            Remote:InvokeServer("Collect Wins")
            local target = Workspace.Worlds.Space:WaitForChild("FinishProximity")
            if target and target:IsA("BasePart") then
                Root.CFrame = target.CFrame + Vector3.new(0, 3, 0)
            end
        end)
    end
end)

for i = 1, 8 do
    pcall(function()
        WorldTab:CreateButton({
            Name = "Teleport to World "..i,
            Callback = function()
                pcall(function()
                    Remote:InvokeServer("Set Current World", i)
                end)
            end
        })
    end)
end
