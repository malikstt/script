local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")

local function getChest(chestName)
    return workspace:FindFirstChild("Rendered")
    and workspace.Rendered:FindFirstChild("Rifts")
    and workspace.Rendered.Rifts:FindFirstChild(chestName)
    and workspace.Rendered.Rifts[chestName]:FindFirstChild("Chest")
    and workspace.Rendered.Rifts[chestName].Chest:FindFirstChild(chestName)
end

local function teleportToChest(chest)
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart")
    hrp.CFrame = chest.CFrame * CFrame.new(0, 0, 5)
end

local function spamRE(chestName)
    while true do
        local chest = getChest(chestName)
        if chest then
            teleportToChest(chest)
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
        else
            break
        end
        task.wait(0.1)
    end
end

task.spawn(function()
    while true do
        if AUTO_SPAM_SUPER_CHEST then
            local chest = getChest("super-chest")
            if chest then
                spamRE("super-chest")
            end
        end
        if AUTO_SPAM_DICE_CHEST then
            local chest = getChest("dice-rift")
            if chest then
                spamRE("dice-rift")
            end
        end
        if AUTO_SPAM_ROYAL_CHEST then
            local chest = getChest("royal-chest")
            if chest then
                spamRE("royal-chest")
            end
        end
        task.wait(5)
    end
end)
