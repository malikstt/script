local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local NetworkEvent = ReplicatedStorage:FindFirstChild("NetworkEvent")
local NetworkFunction = ReplicatedStorage:FindFirstChild("NetworkFunction")

local function teleportToEggByName(name)
    local egg = Workspace:FindFirstChild("Rendered") and Workspace.Rendered:FindFirstChild("Eggs") and Workspace.Rendered.Eggs:FindFirstChild(name)
    if egg then
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = egg.CFrame * CFrame.new(0,0,5)
        end
    end
end

local function teleportToRiftByName(name)
    local rift = Workspace:FindFirstChild("Rendered") and Workspace.Rendered:FindFirstChild("Rifts") and Workspace.Rendered.Rifts:FindFirstChild(name)
    if rift and rift:FindFirstChild("Egg") then
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = rift.Egg.CFrame * CFrame.new(0,0,5)
        end
    end
end

local function pressKey(key)
    VirtualInputManager:SendKeyEvent(true, key, false, game)
    task.wait(0.06)
    VirtualInputManager:SendKeyEvent(false, key, false, game)
end

local function usePotions()
    while ALWAYS_RUN do
        for _, potion in ipairs(POTION_NAMES) do
            pcall(function()
                if NetworkEvent then
                    NetworkEvent:FireServer("UsePotion", potion)
                elseif NetworkFunction then
                    NetworkFunction:InvokeServer("UsePotion", potion)
                end
            end)
            task.wait(POTION_GAP)
        end
        task.wait(POTION_DELAY)
    end
end

local function deletePets()
    local ok, data = pcall(function() return LocalData and LocalData:Get() end)
    if ok and data and data.Pets then
        for _, pet in pairs(data.Pets) do
            if pet.Id then
                pcall(function()
                    if NetworkEvent then
                        NetworkEvent:FireServer("DeletePet", pet.Id, 1, false)
                    elseif NetworkFunction then
                        NetworkFunction:InvokeServer("DeletePet", pet.Id, 1, false)
                    end
                end)
                task.wait(0.05)
            end
        end
    end
end

task.spawn(usePotions)

task.spawn(function()
    local isHatching = true
    local switchTime = os.time()
    while ALWAYS_RUN do
        local now = os.time()
        if isHatching and (now - switchTime >= 55) then
            isHatching = false
            switchTime = now
        elseif not isHatching and (now - switchTime >= 5) then
            isHatching = true
            switchTime = now
        end

        if isHatching and AUTO_HATCH then
            if RIFT_EGG then
                teleportToRiftByName(RIFT_EGG)
                task.wait(0.2)
            else
                teleportToEggByName(HATCH_1X_EGG)
                task.wait(0.2)
            end
            pressKey(HATCH_KEY)
        elseif not isHatching and AUTO_DELETE then
            deletePets()
        end
        task.wait(0.1)
    end
end)
