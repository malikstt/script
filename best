local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteEvent")
local LocalData = require(ReplicatedStorage.Client.Framework.Services.LocalData)
local PetsModule = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Data"):WaitForChild("Pets"))

local function deletePets()
    local data = LocalData:Get()
    if data and data.Pets then
        for _, pet in pairs(data.Pets) do
            local petInfo = PetsModule[pet.Name]
            if petInfo and petInfo.Rarity ~= "Secret" and petInfo.Rarity ~= "Infinity" then
                local args1 = {"DeletePet", pet.Id, 100, false}
                local args2 = {"DeletePet", pet.Id, 10, false}
                local args3 = {"DeletePet", pet.Id, 1, false}
                Network:FireServer(unpack(args1))
                Network:FireServer(unpack(args2))
                Network:FireServer(unpack(args3))
                task.wait(0.1)
            end
        end
    end
end

while true do
    local hatchArgs = {"HatchPowerupEgg", "Duality Egg", 12}
    Network:FireServer(unpack(hatchArgs))
    deletePets()
    task.wait(1)
end
