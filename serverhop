local webhookUrl = "https://discord.com/api/webhooks/1362479659778048242/wGa5-A_S-Et_CNaAaujUnxgkO6nfeyi2BB031amIpZjZY5jXgCg-Tq7i2SbJfkG8tuGi"
local alreadyFound = {}

local function formatEggName(name)
    name = name:gsub("-", " ")
    return name:gsub("(%a)([%w]*)", function(first, rest) 
        return first:upper() .. rest:lower() 
    end)
end

while true do
    local rendered = workspace:FindFirstChild("Rendered")
    if rendered then
        local riftsFolder = rendered:FindFirstChild("Rifts")
        if riftsFolder then
            for _, rift in ipairs(riftsFolder:GetChildren()) do
                if rift.Name:lower():find("egg") and not alreadyFound[rift] then
                    local luckText = "N/A"
                    local timerText = "N/A"
                    local heightText = "N/A"
                    local minutes = 0
                    
                    pcall(function()
                        luckText = rift.Display.SurfaceGui.Icon.Luck.Text
                    end)
                    
                    pcall(function()
                        timerText = rift.Display.SurfaceGui.Timer.Text
                        minutes = tonumber(timerText:match("%d+")) or 0
                    end)
                    
                    pcall(function()
                        local riftHeight = rift:GetPivot().Position.Y
                        heightText = tostring(math.floor(riftHeight)) .. " studs"
                    end)
                    
                    local playerCount = #game:GetService("Players"):GetPlayers()
                    local jobId = game.JobId
                    local formattedEggName = formatEggName(rift.Name)
                    local expireTimestamp = os.time() + (minutes * 60)
                    
                    local message = {
                        ["embeds"] = {{
                            ["title"] = formattedEggName .. " Has Been Found ü•ö",
                            ["color"] = 0x00FF00,
                            ["fields"] = {
                                {
                                    ["name"] = "üåç Server Info",
                                    ["value"] = "Players Online: " .. playerCount,
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "üé≤ Rift Info",
                                    ["value"] = "Luck Multiplier: " .. luckText .. 
                                               "\nExpires: <t:" .. expireTimestamp .. ":R>" ..
                                               "\nHeight: " .. heightText,
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "üîó Quick Join",
                                    ["value"] = "[Click to Join Server](https://www.roblox.com/games/start?placeId=" .. game.PlaceId .. "&jobId=" .. jobId .. ")",
                                    ["inline"] = false
                                }
                            },
                            ["timestamp"] = DateTime.now():ToIsoDate()
                        }}
                    }
                    
                    local jsonData = game:GetService("HttpService"):JSONEncode(message)
                    
                    local success, result = pcall(function()
                        local response = request({
                            Url = webhookUrl,
                            Method = "POST",
                            Headers = {
                                ["Content-Type"] = "application/json"
                            },
                            Body = jsonData
                        })
                        return response
                    end)
                    
                    if success then
                    else
                    end
                    
                    alreadyFound[rift] = true
                    task.delay(300, function()
                        alreadyFound[rift] = nil
                    end)
                end
            end
        end
    end
    task.wait(10)
end            for _, rift in ipairs(riftsFolder:GetChildren()) do
                if rift.Name:lower():find("egg") and not alreadyFound[rift] then
                    local luckText = "N/A"
                    local timerText = "N/A"
                    local heightText = "N/A"
                    
                    pcall(function()
                        luckText = rift.Display.SurfaceGui.Icon.Luck.Text
                    end)
                    
                    pcall(function()
                        timerText = rift.Display.SurfaceGui.Timer.Text
                    end)
                    
                    pcall(function()
                        local riftHeight = rift:GetPivot().Position.Y
                        heightText = tostring(math.floor(riftHeight)) .. " studs"
                    end)
                    
                    local playerCount = #game:GetService("Players"):GetPlayers()
                    local jobId = game.JobId
                    local formattedEggName = formatEggName(rift.Name)
                    
                    local message = {
                        ["embeds"] = {{
                            ["title"] = formattedEggName .. " Has Been Found ü•ö",
                            ["color"] = 0x00FF00,
                            ["fields"] = {
                                {
                                    ["name"] = "üåç Server Info",
                                    ["value"] = "Players Online: " .. playerCount,
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "üé≤ Rift Info",
                                    ["value"] = "Luck Multiplier: " .. luckText .. 
                                               "\nExpires: in " .. timerText ..
                                               "\nHeight: " .. heightText,
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "üîó Quick Join",
                                    ["value"] = "[Click to Join Server](https://www.roblox.com/games/start?placeId=" .. game.PlaceId .. "&jobId=" .. jobId .. ")",
                                    ["inline"] = false
                                }
                            },
                            ["timestamp"] = DateTime.now():ToIsoDate()
                        }}
                    }
                    
                    local jsonData = game:GetService("HttpService"):JSONEncode(message)
                    
                    local success, result = pcall(function()
                        local response = request({
                            Url = webhookUrl,
                            Method = "POST",
                            Headers = {
                                ["Content-Type"] = "application/json"
                            },
                            Body = jsonData
                        })
                        return response
                    end)
                    
                    if success then
                        print("Webhook sent successfully for:", rift.Name)
                    else
                        print("Error sending webhook:", result)
                    end
                    
                    alreadyFound[rift] = true
                    task.delay(300, function()
                        alreadyFound[rift] = nil
                    end)
                end
            end
        end
    end
    task.wait(10)
end
