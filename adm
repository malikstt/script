-- Teleport to specified location
local targetCFrame = CFrame.new(-21778.83, 8.07, -20468.38)
local player = game:GetService("Players").LocalPlayer

if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    player.Character.HumanoidRootPart.CFrame = targetCFrame
else
    player.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = targetCFrame
end

-- Optimization function to reduce graphics
local function optimizeGame()
    -- Set graphics quality to minimum
    settings().Rendering.QualityLevel = 1
    
    -- Disable various visual effects
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    lighting.FogEnd = 100000
    lighting.Brightness = 2
    
    -- Remove textures and details
    local function stripColorsAndDetails()
        for _, inst in ipairs(workspace:GetDescendants()) do
            -- Simplify colored parts
            if inst:IsA("BasePart") then
                inst.Material = Enum.Material.Plastic
                inst.Color = Color3.new(0.5, 0.5, 0.5) -- plain gray
            end

            -- Remove textures and decals
            if inst:IsA("Decal") or inst:IsA("Texture") then
                inst:Destroy()
            end

            -- Disable or remove visual effects
            if inst:IsA("ParticleEmitter") or inst:IsA("Trail") or inst:IsA("Beam") then
                inst:Destroy()
            end

            -- Remove lights
            if inst:IsA("PointLight") or inst:IsA("SpotLight") or inst:IsA("SurfaceLight") then
                inst:Destroy()
            end

            -- Remove fire/smoke/explosions
            if inst:IsA("Fire") or inst:IsA("Smoke") or inst:IsA("Explosion") then
                inst:Destroy()
            end
        end

        -- Turn off terrain decorations
        if workspace:FindFirstChildOfClass("Terrain") then
            workspace.Terrain.Decorations = false
        end
    end

    -- Run once at start
    stripColorsAndDetails()

    -- Optional: repeat every few seconds in case of new objects
    task.spawn(function()
        while true do
            task.wait(5)
            stripColorsAndDetails()
        end
    end)
end

-- Launch the loadstring with dice settings
task.wait(1) -- Wait a moment after teleport

getgenv().boardSettings = {
    UseGoldenDice = true,
    GoldenDiceDistance = 1,
    DiceDistance = 6,
    GiantDiceDistance = 10,
}

getgenv().remainingItems = {} 

loadstring(game:HttpGet("https://raw.githubusercontent.com/IdiotHub/Scripts/refs/heads/main/BGSI/main.lua"))()

-- Start the claim season loop in a separate thread
task.spawn(function()
    while true do
        local success, error = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteEvent"):FireServer("ClaimSeason")
        end)
        if not success then
            warn("Error claiming season: " .. tostring(error))
        end
        task.wait(0.2)
    end
end)

-- Start optimization in separate thread
task.spawn(optimizeGame)

print("Script loaded successfully! Teleported, optimized, and all functions are running.")
